@page
@using Postie.Core.Models
@using Postie.Core.Contracts;
@model Postie.FrontEnd.Pages.IndexModel
@{
    ViewData["Title"] = "Home page";
    Layout = "Shared/_Layout";
}

<div class="header-text">
    <h1></h1>
</div>


<div class="post-form">
    <div class="post-text">
        Make a Post!
    </div>
    <form action="#" class="custom-form" id="createPostForm">
        <div class="form-row">
            <div class="input-data">
                <input type="text" id="name" name="name" required>
                <div class="underline"></div>
                <label for="">Name</label>
            </div>
            <div class="input-data">
                <input type="email" id="email" name="email" required>
                <div class="underline"></div>
                <label for="">Email Address</label>
            </div>
        </div>
        <div class="form-row">
            <div class="input-data">
                <input type="text" id="title" name="title" required>
                <div class="underline"></div>
                <label for="">Title</label>
            </div>
        </div>
        <div class="form-row">
            <div class="input-data textarea">
                <textarea rows="8" cols="80" id="content" name="content" required></textarea>
                <br />
                <div class="underline"></div>
                <label for="">Write your message</label>
                <br />
                <div class="form-row submit-btn">
                    <div class="input-data">
                        <div class="inner"></div>
                        <input type="submit" value="submit">
                    </div>
                </div>
            </div>
        </div>
    </form>
</div>

<div class="search">
    <div class="row">
        <div class="col">
            <div>
                <div class="search-2">
                    <i class="bx bxs-map"></i>
                    <input type="text" id="search-bar" placeholder="Enter title or message" />
                    <button id="search-button">Search</button>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="list-group">
    @foreach (Post post in Model.allPosts)
    {
        //TO DO DATE COUNTING  <small>3 days ago</small>
        <span class="list-group-item list-group-item-action flex-column align-items-start list-item-custom">
            <div class="d-flex w-100 justify-content-between">
                <h5 class="mb-1">@post.User.Name</h5>
                <h5 class="mb-1">@post.Title</h5>
                <small>@post.CreationDate</small>
            </div>
            <p class="mb-1">@post.Content</p>
        </span>
    }
</div>

<script>
    function sendPostData(endpoint, formData, method = "POST") {
        const dateNow = new Date();
        const formattedDate = dateNow.toISOString().split("T")[0];
        const postData = {
            title: formData.get("title"),
            content: formData.get("content"),
            creationDate: formattedDate,
            user: {
                name: formData.get("name"),
                email: formData.get("email"),
            },
        };

        console.log(postData);

        const jsonString = JSON.stringify(postData);

        fetch(endpoint, {
            method: method,
            body: jsonString,
            headers: {
                Accept: "application/json",
                "Content-Type": "application/json",
            },
        })
            .then((response) => {
                if (!response.ok) {
                    return response.json().then((err) => {
                        throw new Error(
                            "Server error: " + (err.Message || response.statusText)
                        );
                    });
                }
                return response.json();
            })
            .then((data) => {
                console.log("Success:", data);
                alert("Post successfully created!");
                window.location.href = "/Index";
            })
            .catch((error) => {
                console.error("Problem with fetch operation: ", error.message);
            });
    }

    document
        .getElementById("createPostForm")
        .addEventListener("submit", function (event) {
            event.preventDefault();
            const endpoint = "https://localhost:7019/CreatePost";
            const formData = new FormData(this);
            sendPostData(endpoint, formData);
        });

    document
        .getElementById("search-button")
        .addEventListener("click", async function () {
            const query = document.getElementById("search-bar").value.trim();
            const endpoint = query ? `https://localhost:7019/GetPostsByTitleOrContent/${encodeURIComponent(query)}` : "https://localhost:7019/GetAllPosts";

            try {
                const response = await fetch(
                    endpoint,
                    {
                        method: "GET",
                        headers: {
                            Accept: "application/json",
                        },
                    });

                if (!response.ok) {
                    throw new Error("Failed to fetch results.");
                }

                const posts = await response.json();

                const listGroup = document.querySelector(".list-group");
                listGroup.innerHTML = "";

                if (posts.length === 0) {
                    listGroup.innerHTML = `<p>It's lonely here...</p>`;
                    return;
                }

                posts.forEach((post) => {
                    const postElement = document.createElement("span");
                    postElement.className =
                        "list-group-item list-group-item-action flex-column align-items-start list-item-custom";
                    postElement.innerHTML = `
                            <div class="d-flex w-100 justify-content-between">
                                <h5 class="mb-1">${post.user.name}</h5>
                                <h5 class="mb-1">${post.title}</h5>
                                <small>${new Date(post.creationDate).toLocaleDateString()}</small>
                            </div>
                            <p class="mb-1">${post.content}</p>
                        `;

                    listGroup.appendChild(postElement);

                    const deleteButton = document.createElement("button");
                    deleteButton.className = "noselect";
                    deleteButton.dataset.id = post.id;
                    deleteButton.innerHTML = `
                            <span class="text">Delete post</span>
                            <span class="icon">
                                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
                                    <path d="M24 20.188l-8.315-8.209 8.2-8.282-3.697-3.697-8.212 8.318-8.31-8.203-3.666 3.666 8.321 8.24-8.206 8.313 3.666 3.666 8.237-8.318 8.285 8.203z"></path>
                                </svg>
                            </span>
                        `;

                    const editButton = document.createElement("button");
                    editButton.className = "button-64";
                    editButton.setAttribute("data-bs-toggle", "modal");
                    editButton.setAttribute("data-bs-target", "#editPostModal");
                    editButton.dataset.id = post.id;
                    editButton.dataset.title = post.title;
                    editButton.dataset.content = post.content;
                    editButton.innerHTML = '<span class="text">Edit post</span>';

                    const buttonBox = document.createElement("div");
                    buttonBox.className = "d-flex flex-row justify-content-between";
                    buttonBox.appendChild(editButton);
                    buttonBox.appendChild(deleteButton);

                    listGroup.appendChild(buttonBox);

                    deleteButton.addEventListener("click", async function () {
                        const deleteId = this.dataset.id;
                        console.log(deleteId);

                        try {
                            const resp = await fetch(
                                `https://localhost:7019/DeletePost/${deleteId}`,
                                {
                                    method: "DELETE",
                                    headers: {
                                        Accept: "application/json",
                                        "Content-Type": "application/json",
                                    },
                                }
                            );

                            if (!resp.ok) {
                                const text = await resp.text();
                                throw new Error(
                                    `Network response was not ok: ${resp.statusText}. Response body: ${text}`
                                );
                            }

                            alert("Post successfully deleted!");
                            window.location.href = "/Index";
                        } catch (error) {
                            console.error("There was a problem with fetch operation: ", error);
                        }
                    });

                    editButton.addEventListener("click", function () {
                        const postId = this.dataset.id;
                        const postTitle = this.dataset.title;
                        const postContent = this.dataset.content;

                        document.getElementById("edit-title").value = postTitle;
                        document.getElementById("edit-content").value = postContent;

                        document.getElementById("saveChangesButton").onclick =
                            async function () {
                                const updatedTitle = document.getElementById("edit-title").value;
                                const updatedContent = document.getElementById("edit-content").value;

                                try {
                                    const resp = await fetch(
                                        `https://localhost:7019/UpdatePost/${postId}`,
                                        {
                                            method: "PATCH",
                                            headers: {
                                                "Content-Type": "application/json",
                                            },
                                            body: JSON.stringify({
                                                title: updatedTitle,
                                                content: updatedContent,
                                            }),
                                        }
                                    );
                                    if (!resp.ok) {
                                        const text = await resp.text();
                                        throw new Error(
                                            `Network response was not ok: ${resp.statusText}. Response body: ${text}`
                                        );
                                    }

                                    alert("Post successfully updated!");
                                    window.location.href = "/Index";
                                } catch (error) {
                                    console.error("There was a problem with fetch operation: ", error);
                                }
                            };
                    });
                });
            } catch (error) {
                console.error("Error during search: ", error);
            }
        });
</script>