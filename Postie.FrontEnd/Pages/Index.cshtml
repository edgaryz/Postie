@page
@using Postie.Core.Models
@using Postie.Core.Contracts;
@model Postie.FrontEnd.Pages.IndexModel
@{
    ViewData["Title"] = "Home page";
    Layout = "Shared/_Layout";
}

<div class="header-text">
    <h1></h1>
</div>


<div class="post-form">
    <div class="post-text">
        Make a Post!
    </div>
    <form action="#" class="custom-form" id="createPostForm">
        <div class="form-row">
            <div class="input-data">
                <input type="text" id="name" name="name" required>
                <div class="underline"></div>
                <label for="">Name</label>
            </div>
            <div class="input-data">
                <input type="email" id="email" name="email" required>
                <div class="underline"></div>
                <label for="">Email Address</label>
            </div>
        </div>
        <div class="form-row">
            <div class="input-data">
                <input type="text" id="title" name="title" required>
                <div class="underline"></div>
                <label for="">Title</label>
            </div>
        </div>
        <div class="form-row">
            <div class="input-data textarea">
                <textarea rows="8" cols="80" id="content" name="content" required></textarea>
                <br />
                <div class="underline"></div>
                <label for="">Write your message</label>
                <br />
                <div class="form-row submit-btn">
                    <div class="input-data">
                        <div class="inner"></div>
                        <input type="submit" value="submit">
                    </div>
                </div>
            </div>
        </div>
    </form>
</div>

<div class="list-group">
    @foreach (Post post in Model.allPosts)
    {
        //TO DO DATE COUNTING  <small>3 days ago</small>
        <span class="list-group-item list-group-item-action flex-column align-items-start list-item-custom">
            <div class="d-flex w-100 justify-content-between">
                <h5 class="mb-1">@post.User.Name</h5>
                <h5 class="mb-1">@post.Title</h5>
                <small>@post.CreationDate</small>
            </div>
            <p class="mb-1">@post.Content</p>
        </span>
    }
</div>

<script>
    function sendPostData(endpoint, formData, method = "POST") {
        const dateNow = new Date();
        const formattedDate = dateNow.toISOString().split('T')[0];
        const postData = {
            title: formData.get("title"),
            content: formData.get("content"),
            creationDate: formattedDate,
            user: {
                name: formData.get("name"),
                email: formData.get("email"),
            }
        };

        console.log(postData);

        const jsonString = JSON.stringify(postData);

        fetch(endpoint, {
            method: method,
            body: jsonString,
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            },
        })
            .then(response => {
                if (!response.ok) {
                    return response.json().then(err => {
                        throw new Error('Server error: ' + (err.Messsage || response.statusText));
                    });
                }
                return response.json();
            })
            .then(data => {
                console.log('Success:', data);
                window.location.href = '/Index';
            })
            .catch(error => {
                console.error("Problem with fetch operation: ", error.message);
            });
    }

    document.getElementById('createPostForm').addEventListener('submit', function (event) {
        event.preventDefault();
        const endpoint = 'https://localhost:7019/CreatePost';
        const formData = new FormData(this);
        sendPostData(endpoint, formData);
    });
</script>