@page
@using Postie.Core.Models
@using Postie.Core.Contracts;
@model Postie.FrontEnd.Pages.UsersModel
@{
    ViewData["Title"] = "Users";
    Layout = "Shared/_Layout";
}

<div class="post-form">
    <div class="post-text">
        Login to see your posts!
    </div>
    <form action="#" class="custom-form" id="loginForm">
        <div class="form-row">
            <div class="input-data">
                <input type="text" id="name" name="name" required>
                <div class="underline"></div>
                <label for="">Name</label>
            </div>
            <div class="input-data">
                <input type="email" id="email" name="email" required>
                <div class="underline"></div>
                <label for="">Email Address</label>
            </div>
        </div>
            <div class="form-row submit-btn">
                <div class="input-data">
                    <div class="inner"></div>
                    <input type="submit" value="Login">
                </div>
            </div>
    </form>

</div>

<div class="list-group"></div>

<script>
    document
        .getElementById("loginForm")
        .addEventListener("submit", async function (event) {
            event.preventDefault();

            const name = document.getElementById("name").value;
            const email = document.getElementById("email").value;

            const user = {
                Name: name,
                Email: email,
            };

            try {
                const response = await fetch("https://localhost:7019/GetPostsByUser", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify(user),
                });

                if (!response.ok) {
                    throw new Error("Failed to fetch posts");
                }

                const posts = await response.json();
                console.log(posts);

                const listGroup = document.querySelector(".list-group");
                listGroup.innerHTML = "";

                if (posts.length === 0) {
                    listGroup.innerHTML = `<p>It's lonely here...</p>`;
                    return;
                }

                posts.forEach((post) => {
                    const postElement = document.createElement("span");
                    postElement.className =
                        "list-group-item list-group-item-action flex-column align-items-start list-item-custom";
                    postElement.innerHTML = `
                    <div class="d-flex w-100 justify-content-between">
                        <h5 class="mb-1">${user.Name}</h5>
                        <h5 class="mb-1">${post.title}</h5>
                        <small>${new Date(
                        post.creationDate
                    ).toLocaleDateString()}</small>
                    </div>
                    <p class="mb-1">${post.content}</p>
                `;

                    listGroup.appendChild(postElement);

                    const deleteButton = document.createElement("button");
                    deleteButton.className = "noselect";
                    deleteButton.dataset.id = post.id;
                    deleteButton.innerHTML = `<span class="text">Delete post</span><span class="icon"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path d="M24 20.188l-8.315-8.209 8.2-8.282-3.697-3.697-8.212 8.318-8.31-8.203-3.666 3.666 8.321 8.24-8.206 8.313 3.666 3.666 8.237-8.318 8.285 8.203z"></path></svg></span>`;
                    listGroup.appendChild(deleteButton);

                    deleteButton.addEventListener("click", async function () {
                        const deleteId = this.dataset.id;
                        console.log(deleteId);

                        try {
                            const resp = await fetch(`https://localhost:7019/DeletePost/${deleteId}`, {
                                method: "DELETE",
                                headers: {
                                    Accept: "application/json",
                                    "Content-Type": "application/json",
                                },
                            });

                            if (!resp.ok) {
                                const text = await resp.text();
                                throw new Error(`Network response was not ok: ${resp.statusText}. Response body: ${text}`);
                            }

                            alert("Post successfully deleted!");
                            window.location.href = "/Users";
                        } catch (error) {
                            console.error("There was a problem with fetch operation: ", error);
                        }
                    });
                });
            } catch (error) {
                console.error(error.message);
            }
        });
</script>